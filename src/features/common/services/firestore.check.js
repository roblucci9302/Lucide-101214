const { initializeFirebase, getFirestoreInstance } = require('./firebaseClient');
const { collection, getDocs, getDoc, doc } = require('firebase/firestore');

async function checkFirestoreSetup() {
    console.log('üîç V√©rification de la configuration Firestore...\n');

    try {
        // 1. Initialisation Firebase
        console.log('1Ô∏è‚É£ Connexion √† Firebase');
        initializeFirebase();
        const db = getFirestoreInstance();
        console.log('‚úÖ Connect√© √† Firebase\n');

        // 2. V√©rification de la r√©gion
        console.log('2Ô∏è‚É£ V√©rification de la r√©gion');
        const settings = db._settings || {};
        console.log('üìç Configuration actuelle :');
        console.log(JSON.stringify(settings, null, 2));
        
        // 3. V√©rification des collections
        console.log('\n3Ô∏è‚É£ V√©rification des collections');

        // Collection settings
        console.log('\nV√©rification de la collection settings...');
        const settingsDoc = await getDoc(doc(db, 'settings', 'app'));
        if (settingsDoc.exists()) {
            console.log('‚úÖ Collection settings trouv√©e');
            console.log('üìÑ Contenu:', settingsDoc.data());
        } else {
            console.log('‚ùå Collection settings non trouv√©e');
        }

        // Collection ai_models
        console.log('\nV√©rification de la collection ai_models...');
        const aiModelsDoc = await getDoc(doc(db, 'ai_models', 'default'));
        if (aiModelsDoc.exists()) {
            console.log('‚úÖ Collection ai_models trouv√©e');
            console.log('üìÑ Contenu:', aiModelsDoc.data());
        } else {
            console.log('‚ùå Collection ai_models non trouv√©e');
        }

        // Collection system_prompts
        console.log('\nV√©rification de la collection system_prompts...');
        const promptsDoc = await getDoc(doc(db, 'system_prompts', 'default'));
        if (promptsDoc.exists()) {
            console.log('‚úÖ Collection system_prompts trouv√©e');
            console.log('üìÑ Contenu:', promptsDoc.data());
        } else {
            console.log('‚ùå Collection system_prompts non trouv√©e');
        }

    } catch (error) {
        console.error('\n‚ùå Erreur pendant la v√©rification:', error);
        throw error;
    }
}

// Ex√©cuter la v√©rification
checkFirestoreSetup().catch(console.error);
